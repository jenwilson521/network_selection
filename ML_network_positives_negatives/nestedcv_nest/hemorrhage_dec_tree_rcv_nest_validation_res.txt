RandomizedSearchCV{'min_samples_leaf': [1, 10, 20], 'class_weight': ['balanced', None], 'min_samples_split': [2, 10, 30], 'criterion': ['gini', 'entropy'], 'max_depth': [None, 3, 8, 13], 'splitter': ['best', 'random']}['f1 0.6898039215686276+/-0.02366951751109423', 'roc 0.7250638507267627+/-0.014586679477739502', 'accuracy 0.7234848484848485+/-0.013275934592245357', "cm0 [['tp:15', 'fn:8'], ['fp:7', 'tn:25']]", "cm1 [['tp:18', 'fn:5'], ['fp:10', 'tn:21']]", "cm2 [['tp:18', 'fn:5'], ['fp:9', 'tn:22']]", "cm3 [['tp:16', 'fn:6'], ['fp:10', 'tn:22']]"]
{'mean': [('f1', 0.6898039215686276), ('roc', 0.7250638507267627), ('accuracy', 0.7234848484848485)], 'std': [('f1', 0.02366951751109423), ('roc', 0.014586679477739502), ('accuracy', 0.013275934592245357)], 'nested_score': {'test_tp': array([15, 18, 18, 16]), 'test_fp': array([ 7, 10,  9, 10]), 'test_fn': array([8, 5, 5, 6]), 'test_roc': array([0.71671196, 0.73001403, 0.74614306, 0.70738636]), 'test_tn': array([25, 21, 22, 22]), 'score_time': array([0.00408268, 0.00401425, 0.00410247, 0.00401878]), 'fit_time': array([7.08911467, 7.08537912, 7.13573194, 7.09146452]), 'test_accuracy': array([0.72727273, 0.72222222, 0.74074074, 0.7037037 ]), 'test_f1': array([0.66666667, 0.70588235, 0.72      , 0.66666667])}, 'str': ['f1 0.6898039215686276+/-0.02366951751109423', 'roc 0.7250638507267627+/-0.014586679477739502', 'accuracy 0.7234848484848485+/-0.013275934592245357', "cm0 [['tp:15', 'fn:8'], ['fp:7', 'tn:25']]", "cm1 [['tp:18', 'fn:5'], ['fp:10', 'tn:21']]", "cm2 [['tp:18', 'fn:5'], ['fp:9', 'tn:22']]", "cm3 [['tp:16', 'fn:6'], ['fp:10', 'tn:22']]"]}